{{- if .Values.mastodon.createAdmin.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "mastodon.fullname" . }}-create-admin
  labels:
    {{- include "mastodon.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-1"
spec:
  template:
    metadata:
      name: {{ include "mastodon.fullname" . }}-create-admin
      {{- with .Values.jobAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      restartPolicy: Never
      {{- if (not .Values.mastodon.s3.enabled) }}
      # ensure we run on the same node as the other rails components; only
      # required when using PVCs that are ReadWriteOnce
      {{- if or (eq "ReadWriteOnce" .Values.mastodon.persistence.assets.accessMode) (eq "ReadWriteOnce" .Values.mastodon.persistence.system.accessMode) }}
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/part-of
                  operator: In
                  values:
                    - rails
            topologyKey: kubernetes.io/hostname
      {{- end }}
      {{- end }}
      {{- with (default .Values.podSecurityContext .Values.mastodon.web.podSecurityContext) }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.mastodon.extraVolumes (not .Values.mastodon.s3.enabled) }}
      volumes:
        {{- if not .Values.mastodon.s3.enabled }}
        - name: assets
          persistentVolumeClaim:
            claimName: {{ template "mastodon.pvc.assets" . }}
        - name: system
          persistentVolumeClaim:
            claimName: {{ template "mastodon.pvc.system" . }}
        {{- end }}
        {{- if gt (len .Values.mastodon.extraVolumes) 0 }}
        {{ toYaml .Values.mastodon.extraVolumes | nindent 8}}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ include "mastodon.fullname" . }}-create-admin
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          command:
            - /bin/bash
            - -c
            - bin/tootctl accounts create "$ADMIN_USER" --email "$ADMIN_EMAIL" --confirmed --role Owner
          envFrom:
            - configMapRef:
                name: {{ include "mastodon.fullname" . }}-env
            - secretRef:
                name: {{ template "mastodon.secretName" . }}
          env:
            - name: "ADMIN_USER"
              {{- if .Values.mastodon.createAdmin.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mastodon.createAdmin.existingSecret }}
                  key: {{ .Values.mastodon.createAdmin.secretKeys.usernameKey }}
              {{- else }}
              value: {{ .Values.mastodon.createAdmin.username }}
              {{- end }}
            - name: "ADMIN_EMAIL"
              {{- if .Values.mastodon.createAdmin.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mastodon.createAdmin.existingSecret }}
                  key: {{ .Values.mastodon.createAdmin.secretKeys.emailKey }}
              {{- else }}
              value: {{ .Values.mastodon.createAdmin.username }}
              {{- end }}
            - name: "ADMIN_PASS"
              {{- if .Values.mastodon.createAdmin.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mastodon.createAdmin.existingSecret }}
                  key: {{ .Values.mastodon.createAdmin.secretKeys.passwordKey }}
              {{- else }}
              value: {{ .Values.mastodon.createAdmin.username }}
              {{- end }}
            - name: "DB_PASS"
              valueFrom:
                secretKeyRef:
                  name: {{ template "mastodon.postgresql.secretName" . }}
                  key: password
            - name: "REDIS_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ template "mastodon.redis.secretName" . }}
                  key: redis-password
            - name: "PORT"
              value: {{ .Values.mastodon.web.port | quote }}
          {{- if or .Values.mastodon.extraVolumeMounts (not .Values.mastodon.s3.enabled)}}
          volumeMounts:
          {{- if not .Values.mastodon.s3.enabled }}
            - name: assets
              mountPath: /opt/mastodon/public/assets
            - name: system
              mountPath: /opt/mastodon/public/system
          {{- end }}
          {{- if gt (len .Values.mastodon.extraVolumeMounts) 0 }}
          {{- toYaml .Values.mastodon.extraVolumeMounts | nindent 12 }}
          {{- end }}
          {{- end }}
{{- end }}
